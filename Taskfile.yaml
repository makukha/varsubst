version: '3'

env:
  COMPOSE_FILE: .dev/compose.yaml

tasks:

  # dev environment

  dev:
    desc: Run dev environment.
    cmds:
      - task: docker:build
      - docker compose run --rm dev
      - defer: docker compose down

  docker:build:
    internal: true
    run: once
    sources:
      - .dev/Dockerfile
      - .dev/compose.yaml
      - .dev/requirements-dev.txt
      - .dev/requirements-doc.txt
      - .dev/requirements-res.txt
    cmds:
      - docker compose build

  # host commands

  research:
    desc: Test original syntax implementations.
    cmds:
      - task: research:compose243
      - task: research:envsubst

  research:*:
    vars: {SYNTAX: '{{index .MATCH 0}}'}
    label: 'research:{{.SYNTAX}}'
    sources:
      - research/syntax.py
      - research/test_{{.SYNTAX}}.py
    cmds:
      - task: docker:build
      - docker compose run --rm research-{{.SYNTAX}} pytest -x test_{{.SYNTAX}}.py

  clean:
    desc: Clean all builder artefacts.
    cmds:
      - rm -rf build* docs/_build subprojects src/syntax/*.{c,h} .task
      - cmd: docker compose down --rmi local --volumes
        ignore_error: true  # can be called in container

  # dev commands

  compile:
    desc: Compile and install release target.
    cmds:
      - task: build:release
      - meson install -C build-release

  test:
    desc: Run tests.
    cmds:
      - task: compile
      - pytest -x tests

  debug:
    desc: Run debugger.
    cmds:
      - task: build:debug
      - gdb --tui build-debug/vsub

  docs:
    desc: Build docs.
    cmds:
      - sphinx-build -M html docs docs/_build

  setup:wrapdb:
    internal: true
    status:
      - test -d subprojects/packagecache
      - test -f subprojects/wrapdb.json
    cmds:
      - meson wrap update-db

  setup:build:*:
    internal: true
    vars: {BTYPE: '{{index .MATCH 0}}'}
    sources: [meson.build]
    generates: ['build-{{.BTYPE}}/**/*']
    cmds:
      - meson setup build-{{.BTYPE}} --buildtype={{.BTYPE}}

  build:*:
    internal: true
    vars: {BTYPE: '{{index .MATCH 0}}'}
    cmds:
      - task: generate:parser:compose243
      - task: generate:parser:envsubst
      - task: setup:wrapdb
      - task: setup:build:{{.BTYPE}}
      - meson compile -C build-{{.BTYPE}}

  # generate

  generate:parser:*:
    internal: true
    vars: {SYNTAX: '{{index .MATCH 0}}'}
    status:
      - test src/syntax/{{.SYNTAX}}.h -nt src/syntax/{{.SYNTAX}}.peg
    cmds:
      - packcc src/syntax/{{.SYNTAX}}.peg

  # release

  version:
    desc: Bump project version > task version -- bump minor
    cmds:
      - bump-my-version bump {{.CLI_ARGS}}
